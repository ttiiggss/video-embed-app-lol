{
  "path": "video-embed-app/setup-video-embed-app.bat",
  "content": "@echo off\nREM Batch script to set up the video-embed-app project structure and files\n\nREM Create directories\nmkdir src\n\nREM Create package.json\n(\necho {\necho.  \"name\": \"video-embed-app\",\necho.  \"version\": \"1.0.0\",\necho.  \"private\": true,\necho.  \"scripts\": {\necho.    \"dev\": \"vite\",\necho.    \"build\": \"vite build\",\necho.    \"preview\": \"vite preview\"\necho.  },\necho.  \"dependencies\": {\necho.    \"axios\": \"^1.6.7\",\necho.    \"react\": \"^18.2.0\",\necho.    \"react-dom\": \"^18.2.0\"\necho.  },\necho.  \"devDependencies\": {\necho.    \"@vitejs/plugin-react\": \"^4.2.1\",\necho.    \"vite\": \"^4.4.9\"\necho.  }\necho }\n) > package.json\n\nREM Create vite.config.js\n(\necho import { defineConfig } from 'vite'\necho import react from '@vitejs/plugin-react'\necho.\necho export default defineConfig({\necho.  plugins: [react()],\necho })\n) > vite.config.js\n\nREM Create index.html\n(\necho ^<!DOCTYPE html^>\necho ^<html lang=\"en\"^>\necho.  ^<head^>\necho.    ^<meta charset=\"UTF-8\" /^>\necho.    ^<link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" /^>\necho.    ^<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /^>\necho.    ^<title^>Video Embed App^</title^>\necho.  ^</head^>\necho.  ^<body^>\necho.    ^<div id=\"root\"^>^</div^>\necho.    ^<script type=\"module\" src=\"/src/main.jsx\"^>^</script^>\necho.  ^</body^>\necho ^</html^>\n) > index.html\n\nREM Create README.md\n(\necho # Video Embed App\necho.\necho A React app to search for movies, TV shows, or directly by IMDB ID, and embed videos using the Vidsrc API.\necho.\necho ## Setup\necho.\necho 1. Install dependencies:\necho.   ```bash\necho.   npm install\necho.   ```\necho 2. Get a free TMDB API key from [TMDB](https://www.themoviedb.org/).\necho 3. Open `src/App.jsx` and replace `YOUR_TMDB_API_KEY` with your key.\necho 4. Start the dev server:\necho.   ```bash\necho.   npm run dev\necho.   ```\necho.\necho ## Features\necho - Search for movies or TV shows by title (uses TMDB API)\necho - Search directly by IMDB ID\necho - Embed videos using Vidsrc\necho.\necho ## Notes\necho - For IMDB ID, enter something like `tt0944947` (Game of Thrones).\necho - For movies/TV, search and select a result to embed.\n) > README.md\n\nREM Create src\\main.jsx\n(\necho import React from 'react'\necho import ReactDOM from 'react-dom/client'\necho import App from './App'\necho import './styles.css'\necho.\necho ReactDOM.createRoot(document.getElementById('root')).render(\necho.  ^<React.StrictMode^>\necho.    ^<App /^>\necho.  ^</React.StrictMode^>\necho )\n) > src\\main.jsx\n\nREM Create src\\styles.css\n(\necho body {\necho.  font-family: system-ui, sans-serif;\necho.  background: #f7f7f7;\necho.  margin: 0;\necho.  padding: 0;\necho }\necho.\necho #root {\necho.  min-height: 100vh;\necho }\necho.\necho h1 {\necho.  text-align: center;\necho.  color: #333;\necho }\necho.\necho form {\necho.  display: flex;\necho.  justify-content: center;\necho.  align-items: center;\necho.  gap: 10px;\necho.  margin-bottom: 20px;\necho }\necho.\necho input, select, button {\necho.  font-size: 1rem;\necho.  padding: 6px 10px;\necho }\necho.\necho button {\necho.  background: #007bff;\necho.  color: white;\necho.  border: none;\necho.  border-radius: 4px;\necho.  cursor: pointer;\necho }\necho.\necho button:hover {\necho.  background: #0056b3;\necho }\necho.\necho img {\necho.  border-radius: 4px;\necho }\n) > src\\styles.css\n\nREM Create src\\App.jsx\n(\necho import React, ^{ useState ^} from \"react\";\necho import axios from \"axios\";\necho.\necho const TMDB_API_KEY = \"YOUR_TMDB_API_KEY\"; // ^<-- Insert your TMDB API key here\necho.\necho function App() {\necho.  const [type, setType] = useState(\"movie\");\necho.  const [query, setQuery] = useState(\"\");\necho.  const [results, setResults] = useState([]);\necho.  const [embedUrl, setEmbedUrl] = useState(\"\");\necho.  const [loading, setLoading] = useState(false);\necho.  const [error, setError] = useState(\"\");\necho.\necho.  const handleSearch = async (e) => {\necho.    e.preventDefault();\necho.    setError(\"\");\necho.    setEmbedUrl(\"\");\necho.    setResults([]);\necho.    if (!query) return;\necho.\necho.    if (type === \"imdb\") {\necho.      setEmbedUrl(`https://vidsrc.xyz/embed/movie?imdb=${query}`);\necho.      return;\necho.    }\necho.\necho.    setLoading(true);\necho.    try {\necho.      const endpoint =\necho.        type === \"movie\"\necho.          ? `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${encodeURIComponent(query)}`\necho.          : `https://api.themoviedb.org/3/search/tv?api_key=${TMDB_API_KEY}&query=${encodeURIComponent(query)}`;\necho.\necho.      const res = await axios.get(endpoint);\necho.      setResults(res.data.results);\necho.    } catch (err) {\necho.      setError(\"Error fetching data. Please check your API key and network.\");\necho.    }\necho.    setLoading(false);\necho.  };\necho.\necho.  const handleSelect = async (item) => {\necho.    setError(\"\");\necho.    setEmbedUrl(\"\");\necho.    let imdbId = \"\";\necho.    try {\necho.      if (type === \"movie\") {\necho.        const details = await axios.get(\necho.          `https://api.themoviedb.org/3/movie/${item.id}?api_key=${TMDB_API_KEY}`\necho.        );\necho.        imdbId = details.data.imdb_id;\necho.        setEmbedUrl(`https://vidsrc.xyz/embed/movie?imdb=${imdbId}`);\necho.      } else if (type === \"tv\") {\necho.        const details = await axios.get(\necho.          `https://api.themoviedb.org/3/tv/${item.id}/external_ids?api_key=${TMDB_API_KEY}`\necho.        );\necho.        imdbId = details.data.imdb_id;\necho.        setEmbedUrl(`https://vidsrc.xyz/embed/tv?imdb=${imdbId}`);\necho.      }\necho.    } catch (err) {\necho.      setError(\"Error fetching IMDB ID.\");\necho.    }\necho.  };\necho.\necho.  return (\necho.    ^<div style={{ maxWidth: 600, margin: \"auto\", padding: 20 }}^>\necho.      ^<h1^>Video Embed Search^</h1^>\necho.      ^<form onSubmit={handleSearch} style={{ marginBottom: 20 }}^>\necho.        ^<select value={type} onChange={(e) => { setType(e.target.value); setResults([]); setEmbedUrl(\"\"); }}^>\necho.          ^<option value=\"movie\"^>Movie^</option^>\necho.          ^<option value=\"tv\"^>TV Show^</option^>\necho.          ^<option value=\"imdb\"^>IMDB ID^</option^>\necho.        ^</select^>\necho.        ^<input\n          type=\"text\"\n          placeholder={\n            type === \"imdb\"\n              ? \"Enter IMDB ID (e.g. tt0944947)\"\n              : \"Search for a title...\"\n          }\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          style={{ marginLeft: 10, width: 200 }}\n        /^>\necho.        ^<button type=\"submit\" style={{ marginLeft: 10 }}^>\necho.          Search\n        ^</button^>\necho.      ^</form^>\necho.      {loading && ^<div^>Loading...^</div^>}\necho.      {error && ^<div style={{ color: \"red\" }}^>{error}^</div^>}\necho.      ^<div^>\necho.        {results.map((item) => (\necho.          ^<div\n            key={item.id}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: 10,\n              cursor: \"pointer\",\n            }}\n            onClick={() => handleSelect(item)}\n          ^>\necho.            {item.poster_path && (\necho.              ^<img\n                src={`https://image.tmdb.org/t/p/w92${item.poster_path}`}\n                alt={item.title || item.name}\n                style={{ marginRight: 10 }}\n              /^>\necho.            )}\necho.            ^<span^>{item.title || item.name}^</span^>\necho.          ^</div^>\necho.        ))}\necho.      ^</div^>\necho.      {embedUrl && (\necho.        ^<div style={{ marginTop: 30 }}^>\necho.          ^<iframe\n            src={embedUrl}\n            width=\"100%\"\n            height=\"400\"\n            allowFullScreen\n            frameBorder=\"0\"\n            title=\"Video Player\"\n          /^>\necho.        ^</div^>\necho.      )}\necho.    ^</div^>\necho.  );\necho }\necho.\necho export default App;\n) > src\\App.jsx\n\necho Project files created. Please edit src\\App.jsx to add your TMDB API key.\n",
  "mode": "rewrite"
}
